# Video Detection Pipeline

This project performs **face detection** and/or **object detection** on videos using YOLOv8. It generates annotated videos and saves detection results in CSV format.

---

```markdown
##  Project Structure
```plaintext
video/
├── src/
│   ├── face_detect.py # Face detection logic
│   ├── object_detect.py # Object detection logic
│   └── main.py # Main script to run the full pipeline
├── data/
│   └── input_videos/
├── results/
│   ├── stab-seg ...
├── requirements.txt # Python dependencies
└── README.md # This file


##  How to Run the Pipeline

### 1. Set Up Virtual Environment
cd video
python -m venv venv
# Mac/Linux source venv/bin/activate      # Windows: venv\Scripts\activate

### 2. Install Requirements
pip install torch==2.7.1 torchvision==0.22.1 --index-url https://download.pytorch.org/whl/cpu
pip install -r requirements.txt

### 3. Add Video(s)

### 4. Run the Pipeline

# Stabilize + segment 
python src/main.py --stab --seg 

# Stabilize only 
Python src/ main.py --stab 

# Segment only 
python src/main.py --seg 
# Neither 
python src/main.py

# run all 4 versions:
python src/main.py --all_versions
(could substitute main.py with main_time.py to check running time)

### Output

Annotated videos:  
results/runs/<face_detect|object_detect>/<video_name>.mp4

CSV results:  
results/csv/<face_detect_results|object_detect_results>.csv

Each CSV contains:  
frame_number,object_class,confidence_score,x1,y1,x2,y2

